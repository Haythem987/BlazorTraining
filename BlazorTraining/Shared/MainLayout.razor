@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<PageTitle>Blazor练习项目</PageTitle>
<MApp Id="app">
    <MNavigationDrawer App Permanent Floating Class="border-r border-solid border-gray-200 p-4">
        <div class="text-center font-bold">Blazor练习项目</div>
        <MList Routable Class="mt-4">
            @foreach (var item in _routerItems)
            {
                <MListItem Href="@item.Path" ActiveClass="primary--text" Class="m-3">
                    <MIcon>@item.Icon</MIcon>
                    <MListItemContent>
                        @item.Name
                    </MListItemContent>
                </MListItem>
            }
        </MList>
    </MNavigationDrawer>
    <div class="flex flex-col">
        <MAppBar App Elevation="0"
                 Class="bg-white border-b border-solid border-gray-200">
            <MIcon>@_BarIcon</MIcon>
            <MAppBarTitle>@_BarTitle</MAppBarTitle>
        </MAppBar>
        <MMain>@Body</MMain>
    </div>
</MApp>

@code{

    private class RouterItem
    {
        public string Path { get; init; }
        public string Name { get; init; }
        public string Icon { get; init; }
    }

    private readonly List<RouterItem> _routerItems =
    [
        new() { Path = "/", Name = "首页", Icon = "mdi-home" },
        new() { Path = "/counter", Name = "计数器", Icon = "mdi-plus" },
        new() { Path = "/collections", Name = "收藏列表", Icon = "mdi-star" }
    ];

    protected override void OnInitialized()
    {
        UpdateBarInfo();
        NavigationManager.LocationChanged += HandleLocationChanged;
    }

    private void HandleLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        UpdateBarInfo();
    }

    private string _BarTitle, _BarIcon;

    private void UpdateBarInfo()
    {
        var NowUrl = NavigationManager.Uri[(NavigationManager.BaseUri.Length - 1)..];
        var NowItem = _routerItems.FirstOrDefault(x => x.Path == NowUrl);

        if (NowItem != null)
        {
            _BarTitle = NowItem.Name;
            _BarIcon = NowItem.Icon;
        }

        StateHasChanged();
    }


}
